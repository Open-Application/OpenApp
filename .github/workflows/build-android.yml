name: build-android

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
        description: 'App name'
      version:
        required: true
        type: string
        description: 'Version to build'

jobs:
  build-android-app:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download Deps lib
        shell: bash
        run: |
          set -xeuo pipefail

          LATEST_RELEASE=$(curl -s -H "Authorization: Bearer ${GITHUB_TOKEN}" https://api.github.com/repos/Open-Application/OpenCore/releases/latest | grep '"tag_name":' | cut -d'"' -f4)

          if [ -z "${LATEST_RELEASE}" ]; then
            echo "Error: Failed to fetch latest release tag"
            exit 1
          fi

          echo "Latest OpenCore release: ${LATEST_RELEASE}"

          DOWNLOAD_URL="https://github.com/Open-Application/OpenCore/releases/download/${LATEST_RELEASE}/liboc-android-universal-${LATEST_RELEASE}.tar.gz"
          echo "Downloading from: ${DOWNLOAD_URL}"

          curl -L -H "Authorization: Bearer ${GITHUB_TOKEN}" -o liboc.tar.gz "${DOWNLOAD_URL}"
          mkdir -p android/app/libs/
          tar -xzf liboc.tar.gz -C android/app/libs/

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Set build environment
        run: |
          set -xeuo pipefail

          # Calculate build number from version (a.b.c -> a*100+b*10+c)
          VERSION="${{ inputs.version }}"
          VERSION="${VERSION#v}"
          IFS='.' read -r a b c <<< "$VERSION"
          BUILD_NUMBER=$((a * 100 + b * 10 + c))
          echo "Calculated build number: ${BUILD_NUMBER} from version ${VERSION}"

          # Update pubspec.yaml with version+build_number
          sed -i.bak "s/^version: .*/version: ${VERSION}+${BUILD_NUMBER}/" pubspec.yaml
          echo "Updated pubspec.yaml version to: ${VERSION}+${BUILD_NUMBER}"

      - name: Install Flutter dependencies
        run: |
          flutter pub get

      - name: Check Flutter version
        run: |
          flutter --version

      - name: Setup Android signing
        run: |
          echo "${{ secrets.PKCS12_BASE64 }}" | base64 --decode > android/app/${{ secrets.PKCS12_NAME }}-keystore.jks

          cat > android/key.properties << EOF
          storePassword=${{ secrets.PKCS12_PASSWORD }}
          keyPassword=${{ secrets.PKCS12_PASSWORD }}
          keyAlias=${{ secrets.PKCS12_NAME }}
          storeFile=${{ secrets.PKCS12_NAME }}-keystore.jks
          EOF

      - name: Build Android APK and App Bundle
        run: |
          set -xeuo pipefail

          echo "Building ${{ inputs.name }} ${{ inputs.version }} (Release Mode)"
          rm -rf .dart_tool android/.gradle
          flutter gen-l10n
          flutter pub run flutter_launcher_icons

          echo "Building APK..."
          flutter build apk --release \
              --obfuscate \
              --split-debug-info=debug-info/android \
              --suppress-analytics \
              --no-tree-shake-icons

          echo "Renaming APK for release..."
          mv build/app/outputs/flutter-apk/app-release.apk "${{ inputs.name }}-android-universal-${{ inputs.version }}.apk"
          echo "Release APK created: ${{ inputs.name }}-android-universal-${{ inputs.version }}.apk"

          echo "Building App Bundle..."
          flutter build appbundle --release \
              --obfuscate \
              --split-debug-info=debug-info/android \
              --suppress-analytics \
              --no-tree-shake-icons

          echo "Renaming AAB for release..."
          mv build/app/outputs/bundle/release/app-release.aab "${{ inputs.name }}-android-${{ inputs.version }}.aab"
          echo "Release AAB created: ${{ inputs.name }}-android-${{ inputs.version }}.aab"

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          name: Release ${{ inputs.version }}
          draft: false
          prerelease: false
          overwrite_files: true
          files: |
            ${{ inputs.name }}-android-universal-${{ inputs.version }}.apk
            ${{ inputs.name }}-android-${{ inputs.version }}.aab
          body: |
            ## Android Application for ${{ inputs.version }}

            ### Build Configuration
            - **Platform**: Android
            - **Formats**: APK (universal) + App Bundle (AAB)
            - **Architecture**: Universal (arm64-v8a, armeabi-v7a, x86_64)
            - **Build Type**: Release (Obfuscated)
            - **Min SDK**: 21
            - **Target SDK**: 35
            - **Code Obfuscation**: Enabled
            - **Debug Symbols**: Available as workflow artifact

